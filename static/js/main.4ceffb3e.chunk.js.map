{"version":3,"sources":["components/navbar.js","components/alert.js","components/textform.js","App.js","serviceWorker.js","index.js"],"names":["navbar","props","className","mode","id","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","title","style","height","width","cursor","border","onClick","changeMode","alert","role","visibility","feature","textform","heading","onChange","textareaClicked","rows","value","text","backgroundColor","color","uppercaseClicked","lowercaseClicked","copyText","clearText","extraSpace","split","filter","element","length","defaultProps","App","changed","useState","setMode","setText","setFeature","cls","maincolor","window","location","document","body","classList","remove","index","card","getElementById","removeClassAbout","add","textbox","removeClassTextform","event","target","toLowerCase","setTimeout","toUpperCase","select","navigator","clipboard","writeText","newtext","join","Boolean","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4ceffb3e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar sticky-top navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}id=\"nav\">\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      \r\n     \r\n    </ul>\r\n      <div className=\"rounded bg-primary mx-1\" style={{height:\"25px\",width:\"25px\", cursor:\"pointer\",border: \"2px solid black\"}} onClick={()=>(props.changeMode('primary'))}></div>\r\n      <div className=\"rounded bg-secondary mx-1\" style={{height:\"25px\",width:\"25px\", cursor:\"pointer\",border: \"2px solid black\"}} onClick={()=>(props.changeMode('secondary'))}></div>\r\n      <div className=\"rounded bg-danger mx-1\" style={{height:\"25px\",width:\"25px\", cursor:\"pointer\",border: \"2px solid black\"}} onClick={()=>(props.changeMode('danger'))}></div>\r\n      <div className=\"rounded bg-dark mx-1\" style={{height:\"25px\",width:\"25px\", cursor:\"pointer\",border: \"2px solid black\"}} onClick={()=>(props.changeMode('dark'))}></div>\r\n      <div className=\"rounded bg-success mx-1\" style={{height:\"25px\",width:\"25px\", cursor:\"pointer\",border: \"2px solid black\"}} onClick={()=>(props.changeMode('success'))}></div>\r\n      <div className=\"rounded bg-warning mx-1\" style={{height:\"25px\",width:\"25px\", cursor:\"pointer\",border: \"2px solid black\"}} onClick={()=>(props.changeMode('warning'  ))}></div>\r\n\r\n\r\n  </div>\r\n        </nav>\r\n      \r\n\r\n      {/* <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n        <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onChange={props.changeMode} />\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n      </div> */}\r\n        </>\r\n    )\r\n}\r\n\r\nnavbar.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n  }\r\n  \r\n  navbar.defaultProps = {\r\n  title: 'Set Title'\r\n  }; ","import React from 'react'\r\n\r\nexport default function alert(props) {\r\n    return (\r\n        <div\r\n        className=\"alert alert-light alert-dismissible fade show\"\r\n        role=\"alert\"\r\n        id=\"alert\"\r\n        style={{ visibility: \"hidden\" }}\r\n      >\r\n        <strong>Success!</strong> {props.feature} successfully.\r\n    \r\n      </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function textform(props) {\r\n    return (\r\n        <>\r\n         <div\r\n        className={`container text-${props.mode === \"dark\" ? \"light\" : \"dark\"}`}\r\n      >\r\n        <div className=\"form-group\">\r\n          <h1>{props.heading}</h1>\r\n          <textarea\r\n            className=\"form-control\"\r\n            onChange={props.textareaClicked}\r\n            id=\"myBox\"\r\n            rows=\"7\"\r\n            value={props.text}\r\n            style={{\r\n              backgroundColor: `${props.mode === \"dark\" ? \"#6a6a6a\" : \"white\"}`,\r\n              color: `${props.mode === \"dark\" ? \"white\" : \"black\"}`,\r\n            }}\r\n          ></textarea>\r\n          <button\r\n            className={`btn btn-outline-${\r\n              props.mode === \"dark\" ? \"light\" : \"dark\"\r\n            } my-2 mx-1`}\r\n            onClick={props.uppercaseClicked}\r\n            type=\"submit\"\r\n          >\r\n            Uppercase to LowerCase\r\n          </button>\r\n          <button\r\n            className={`btn btn-outline-${\r\n              props.mode === \"dark\" ? \"light\" : \"dark\"\r\n            } my-2 mx-1`}\r\n            onClick={props.lowercaseClicked}\r\n            type=\"submit\"\r\n          >\r\n            LowerCase to UpperCase\r\n          </button>\r\n          <button\r\n            className={`btn btn-outline-${\r\n              props.mode === \"dark\" ? \"light\" : \"dark\"\r\n            } my-2 mx-1`}\r\n            onClick={props.copyText}\r\n            type=\"submit\"\r\n          >\r\n            Copy Text\r\n          </button>\r\n          <button\r\n            className={`btn btn-outline-${\r\n              props.mode === \"dark\" ? \"light\" : \"dark\"\r\n            } my-2 mx-1`}\r\n            onClick={props.clearText}\r\n            type=\"submit\"\r\n          >\r\n            Clear Text\r\n          </button>\r\n          <button\r\n            className={`btn btn-outline-${\r\n              props.mode === \"dark\" ? \"light\" : \"dark\"\r\n            } my-2 mx-1`}\r\n            onClick={props.extraSpace}\r\n            type=\"submit\"\r\n          >\r\n            Clear Extra Spaces\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`container text-${props.mode === \"dark\" ? \"light\" : \"dark\"}`}\r\n      >\r\n        <h1>Your Text Summary</h1>\r\n        <p>\r\n          {\r\n            props.text.split(\"/s+/\").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }{\" \"}\r\n          words and {props.text.length} alphabets\r\n        </p>\r\n        <p>\r\n          {0.008 *\r\n            props.text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length}{\" \"}\r\n          Minutes Needed to read this text.\r\n        </p>\r\n      </div>\r\n      <div\r\n        className={`container text-${props.mode === \"dark\" ? \"light\" : \"dark\"}`}\r\n      >\r\n        <h2>Preview</h2>\r\n        <p>{props.text.length > 0 ? props.text : \"Enter Something to preview it here\"}</p>\r\n      </div>\r\n   \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport Navbar from './components/navbar';\nimport Alert from './components/alert';\nimport Textform from './components/textform';\nimport { useState } from 'react';\n\nconst removeClassTextform =  ()=>{\n  let textbox=document.getElementById('myBox');\n  let alert=document.getElementById('alert');\n  document.body.classList.remove(\"bg-primary\");\n  document.body.classList.remove(\"bg-secondary\");\n  document.body.classList.remove(\"bg-success\");\n  document.body.classList.remove(\"bg-danger\");\n  document.body.classList.remove(\"bg-warning\");\n  document.body.classList.remove(\"bg-dark\");\n  textbox.classList.remove('bg-warning');\n  textbox.classList.remove('bg-secondary');\n  textbox.classList.remove('bg-danger');\n  textbox.classList.remove('bg-dark');\n  textbox.classList.remove('bg-primary');\n  textbox.classList.remove('bg-success');\n  alert.classList.remove('alert-warning');\n  alert.classList.remove('alert-secondary');\n  alert.classList.remove('alert-success');\n  alert.classList.remove('alert-primary');\n  alert.classList.remove('alert-dark');\n  alert.classList.remove('alert-light');\n  alert.classList.remove('alert-danger');\n}\n\nconst removeClassAbout = ()=>{\n  document.body.classList.remove(\"bg-primary\");\n  document.body.classList.remove(\"bg-secondary\");\n  document.body.classList.remove(\"bg-success\");\n  document.body.classList.remove(\"bg-danger\");\n  document.body.classList.remove(\"bg-warning\");\n  document.body.classList.remove(\"bg-dark\");\n  for (let index = 1; index < 4; index++) {\n\n    let card = document.getElementById(`card${index}`);\n    card.classList.remove(\"bg-warning\");\n    card.classList.remove(\"bg-dark\");\n    card.classList.remove(\"bg-primary\");\n    card.classList.remove(\"bg-light\");\n    card.classList.remove(\"bg-danger\");\n    card.classList.remove(\"bg-success\");\n    card.classList.remove(\"bg-secondary\");\n\n  }\n}\n\n\n\nfunction App() {\n\n\n  const [mode, setMode] =  useState(\"light\");\n  const changeMode = (cls)=>{\n    let maincolor = cls;\n    \n\nif (window.location.href === \"http://localhost:3000/about\") {\n  removeClassAbout();\n  setMode('dark');\n  document.body.classList.add(`bg-${maincolor}`)\n  \n  for (let index = 1; index < 4; index++) {\n    \n    let card = document.getElementById(`card${index}`);\n    card.classList.add(`bg-${maincolor}`);\n    \n  }\n    }\n    else{  \n    let alert=document.getElementById('alert');\n  let textbox=document.getElementById('myBox');\n\n    setMode('dark');\n    removeClassTextform();\n    \n    textbox.classList.add(`bg-${maincolor}`);\n     alert.classList.add(`alert-${maincolor}`);\n     document.body.classList.add(`bg-${maincolor}`)\n    }\n      \n  }\n\n  let changed;\n  const [text, setText] = useState(\"\");\n  const [feature, setFeature] = useState(\"\");\n  const textareaClicked = (event) => {\n    setText(event.target.value);\n   };\n  \n  const uppercaseClicked = () => {\n\n    changed = text.toLowerCase();\n    setText(changed);\n\n    let alert = document.getElementById(\"alert\");\n    setFeature(\"Text changed into Uppercase\");\n    alert.style.visibility =\"visible\";\n    setTimeout(() => {\n      alert.style.visibility = \"hidden\";\n    }, 1000);\n  };\n\n  const lowercaseClicked = () => {\n      \n    changed = text.toUpperCase();\n    setText(changed);\n    let alert = document.getElementById(\"alert\");\n    setFeature(\"Text changed into Lowercase\");\n\n    alert.style.visibility = \"visible\";\n    setTimeout(() => {\n      alert.style.visibility = \"hidden\";\n    }, 1000);\n  \n  };\n  const copyText = () => {\n    setFeature(\"Text Copied\");\n    let alert = document.getElementById(\"alert\");\n\n    var text = document.getElementById(\"myBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    alert.style.visibility = \"visible\";\n    setTimeout(() => {\n      alert.style.visibility = \"hidden\";\n    }, 1000);\n  };\n  const clearText = () => {\n    setFeature(\"Text Cleared\");\n    let alert = document.getElementById(\"alert\");\n\n    var text = document.getElementById(\"myBox\");\n    text = \"\";\n    setText(text);\n    alert.style.visibility = \"visible\";\n    setTimeout(() => {\n      alert.style.visibility = \"hidden\";\n    }, 1000);\n  };\n  const extraSpace = () => {\n    setFeature(\"Text's Extraspace has cleared\");\n    let alert = document.getElementById(\"alert\");\n\n    let newtext = text.split(/[ ]+/);\n    setText(newtext.join(\" \"));\n    alert.style.visibility = \"visible\";\n    setTimeout(() => {\n      alert.style.visibility = \"hidden\";\n    }, 1000);\n  };\n\n\n\n  return (\n    <>\n        <Navbar title=\"TextUtils\" mode={mode} changeMode={changeMode}/>\n        <Alert feature={feature} />\n        <Textform heading=\"Enter the text to analyze below\" text={text} mode={mode} textareaClicked={textareaClicked} uppercaseClicked={uppercaseClicked} lowercaseClicked={lowercaseClicked} copyText={copyText} clearText={clearText} extraSpace={extraSpace} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}